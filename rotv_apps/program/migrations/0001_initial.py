# -*- coding: utf-8 -*-
# Generated by Django 1.9.11 on 2016-11-22 12:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tagging.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True, verbose_name='Data dodania')),
                ('number', models.IntegerField(verbose_name='Numer odcinka')),
                ('title', models.CharField(max_length=255, verbose_name='Tytu\u0142 odcinka')),
                ('short', models.CharField(max_length=255, verbose_name='Kr\xf3tki opis')),
                ('description', models.TextField(verbose_name='Opis')),
                ('new_tags', tagging.fields.TagField(blank=True, max_length=255, null=True, verbose_name='Tagi')),
                ('youtube_code', models.CharField(max_length=255, verbose_name='Kod YT')),
                ('image', models.ImageField(upload_to=b'episodes', verbose_name='Ilustracja')),
                ('promoted', models.BooleanField(default=False, verbose_name='Polecany')),
                ('active', models.BooleanField(default=True, help_text='Niezale\u017cnie od daty publikacji film b\u0119dzie opublikowany tylko je\u017celi ta opcja jest zaznaczona', verbose_name='Do publikacji?')),
                ('publish_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Publikacja')),
            ],
            options={
                'ordering': ['-publish_time'],
                'verbose_name': 'Odcinek',
                'verbose_name_plural': 'Odcinki',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'hosts', verbose_name='Zdj\u0119cie')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Adres e-mail')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Prowadz\u0105cy',
                'verbose_name_plural': 'Prowadz\u0105cy',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa programu')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('image', models.ImageField(blank=True, upload_to=b'programs', verbose_name='Obraz dla programu')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('order', models.IntegerField(default=9999, verbose_name='Kolejno\u015b\u0107')),
                ('new_tags', tagging.fields.TagField(blank=True, max_length=255, null=True, verbose_name='Tagi')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Program',
                'verbose_name_plural': 'Programy',
            },
        ),
        migrations.AddField(
            model_name='episode',
            name='hosts',
            field=models.ManyToManyField(blank=True, to='program.Host', verbose_name='Prowadz\u0105cy'),
        ),
        migrations.AddField(
            model_name='episode',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='program.Program'),
        ),
    ]
